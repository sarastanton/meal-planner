{"ast":null,"code":"import _toConsumableArray from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\nvar ingredientCounter = 1;\nvar ingredientFormArray = [1];\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeForm).call(this));\n\n    _this.createRecipeObj = function () {\n      // debugger\n      var newIngredient = \"{quantity: \".concat(document.querySelector(\"input[name='quantity']\").value, \",\\n      unit: \").concat(document.querySelector(\"input[name='unit']\").value, \",\\n      description: \").concat(document.querySelector(\"input[name='description']\").value, \"}\");\n\n      _this.setState({\n        ingredients_attributes: [].concat(_toConsumableArray(_this.state.ingredients_attributes), [newIngredient])\n      });\n    };\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n      var ingredientsArray = [];\n      var recipeObject = {\n        name: '' //   directions: ''.\n        //   ingredients_attributes: [\n        //      quantity: '',\n        //      unit: '',\n        //      description: '',\n\n      };\n\n      _this.props.createNewDBRecipe(_this.props.recipeFormData); // recipeFormData needs to be in this format: {\n      //   name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n      //    ]\n      // }\n\n    };\n\n    _this.handleOnClick = function (event) {\n      event.preventDefault();\n      console.log(\"button clicked\");\n      ++ingredientCounter;\n      ingredientFormArray.push(ingredientCounter);\n\n      _this.forceUpdate();\n    };\n\n    _this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // debugger\n      return React.createElement(\"div\", {\n        className: \"card card-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"recipe-form\",\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Recipe Name: \")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Directions:\"), \" \"), React.createElement(\"textarea\", {\n        name: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), ingredientFormArray.map(function (i) {\n        return React.createElement(IngredientForm, {\n          count: i,\n          createRecipeObj: _this2.createRecipeObj,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add another ingredient:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nexport default connect(null, {\n  createNewDBRecipe: createNewDBRecipe\n})(RecipeForm);","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","IngredientForm","connect","createNewDBRecipe","ingredientCounter","ingredientFormArray","RecipeForm","createRecipeObj","newIngredient","document","querySelector","value","setState","ingredients_attributes","state","handleOnSubmit","event","preventDefault","ingredientsArray","recipeObject","name","props","recipeFormData","handleOnClick","console","log","push","forceUpdate","directions","handleOnChange","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nlet ingredientCounter = 1;\nlet ingredientFormArray = [1];\n\nclass RecipeForm extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    }\n  }\n\n  createRecipeObj = () => {\n    // debugger\n    let newIngredient =\n      `{quantity: ${document.querySelector(\"input[name='quantity']\").value},\n      unit: ${document.querySelector(\"input[name='unit']\").value},\n      description: ${document.querySelector(\"input[name='description']\").value}}`;\n    this.setState({\n      ingredients_attributes: [...this.state.ingredients_attributes, newIngredient]\n    })\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    let ingredientsArray = [];\n    let recipeObject = {\n      name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n    }\n    this.props.createNewDBRecipe(this.props.recipeFormData)\n  // recipeFormData needs to be in this format: {\n  //   name: '',\n  //   directions: ''.\n  //   ingredients_attributes: [\n  //      quantity: '',\n  //      unit: '',\n  //      description: '',\n  //    ]\n  // }\n}\n\n  handleOnClick = event => {\n    event.preventDefault();\n    console.log(\"button clicked\");\n    ++ingredientCounter;\n    ingredientFormArray.push(ingredientCounter);\n    this.forceUpdate()\n  }\n\n  render() {\n    // debugger\n    return (\n      <div className=\"card card-holder\">\n        <form id=\"recipe-form\" onSubmit={this.handleOnSubmit}>\n          <p>\n            <label htmlFor=\"name\"><strong>Recipe Name: </strong></label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleOnChange}/>\n          </p>\n          <p>\n            <label htmlFor=\"directions\"><strong>Directions:</strong> </label>\n            <textarea name=\"directions\"/>\n          </p>\n          <br/>\n          {ingredientFormArray.map(i => <IngredientForm count={i} createRecipeObj={this.createRecipeObj}/>)}\n          <br />\n          <button onClick={this.handleOnClick}>Add another ingredient:</button>\n          <br />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default connect(null, { createNewDBRecipe })(RecipeForm)\n"]},"metadata":{},"sourceType":"module"}