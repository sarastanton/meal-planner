{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { recipesReducer } from './reducers/recipesReducer';\nimport { mealdaysReducer } from './reducers/mealdaysReducer';\nimport { ingredientsReducer } from './reducers/ingredientsReducer';\nvar middleware = [thunk];\nvar rootReducer = combineReducers({\n  recipes: recipesReducer,\n  mealdays: mealdaysReducer,\n  ingredients: ingredientsReducer\n});\nexport var store = createStore(rootReducer, initialState, applyMiddleware.apply(void 0, middleware));\nvar initialState = {\n  shopiingList: [],\n  recipes: [],\n  mealplan: [],\n  recipeFormData: [],\n  ingredientFormData: []\n};","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","recipesReducer","mealdaysReducer","ingredientsReducer","middleware","rootReducer","recipes","mealdays","ingredients","store","initialState","shopiingList","mealplan","recipeFormData","ingredientFormData"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,eAHF,QAIO,OAJP;AAMA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,IAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,IAAMK,WAAW,GAAGN,eAAe,CAAC;AAClCO,EAAAA,OAAO,EAAEL,cADyB;AAElCM,EAAAA,QAAQ,EAAEL,eAFwB;AAGlCM,EAAAA,WAAW,EAAEL;AAHqB,CAAD,CAAnC;AAMA,OAAO,IAAMM,KAAK,GAAGZ,WAAW,CAACQ,WAAD,EAAcK,YAAd,EAA4BZ,eAAe,MAAf,SAAmBM,UAAnB,CAA5B,CAAzB;AAEP,IAAMM,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBL,EAAAA,OAAO,EAAE,EAFU;AAGnBM,EAAAA,QAAQ,EAAE,EAHS;AAInBC,EAAAA,cAAc,EAAE,EAJG;AAKnBC,EAAAA,kBAAkB,EAAE;AALD,CAArB","sourcesContent":["import {\n  createStore,\n  applyMiddleware,\n  combineReducers\n} from 'redux';\n\nimport thunk from 'redux-thunk';\n\nimport { recipesReducer } from './reducers/recipesReducer'\nimport { mealdaysReducer } from './reducers/mealdaysReducer'\nimport { ingredientsReducer } from './reducers/ingredientsReducer'\n\nconst middleware = [thunk];\n\nconst rootReducer = combineReducers({\n  recipes: recipesReducer,\n  mealdays: mealdaysReducer,\n  ingredients: ingredientsReducer\n})\n\nexport const store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nconst initialState = {\n  shopiingList: [],\n  recipes: [],\n  mealplan: [],\n  recipeFormData: [],\n  ingredientFormData: []\n}\n"]},"metadata":{},"sourceType":"module"}