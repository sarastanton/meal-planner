{"ast":null,"code":"var API_URL = process.env.REACT_APP_API_URL;\n\nvar setRecipes = function setRecipes(recipes) {\n  return {\n    type: \"LOADED_USER_RECIPES\",\n    recipes: recipes\n  };\n};\n\nvar addRecipe = function addRecipe(recipe) {\n  return {\n    type: \"CREATE_DB_RECIPE\",\n    recipe: recipe\n  };\n};\n\nexport var getMyRecipes = function getMyRecipes() {\n  // debugger\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/recipes\")).then(function (response) {\n      return response.json();\n    }).then(function (recipes) {\n      return dispatch(setRecipes(recipes));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var receiveRecipeFormData = function receiveRecipeFormData(recipeFormData) {\n  return {\n    type: \"RECEIVE_FORM_DATA\",\n    recipeFormData: recipeFormData\n  };\n};\nexport var createNewDBRecipe = function createNewDBRecipe(recipe) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/recipes\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        recipe: recipe\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (recipe) {\n      dispatch(addRecipe(recipe));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/actions/myRecipes.js"],"names":["API_URL","process","env","REACT_APP_API_URL","setRecipes","recipes","type","addRecipe","recipe","getMyRecipes","dispatch","fetch","then","response","json","catch","error","console","log","receiveRecipeFormData","recipeFormData","createNewDBRecipe","method","headers","body","JSON","stringify"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC5B,SAAO;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALD;;AAOA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM,EAAI;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAE,kBADD;AAELE,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOC,KAAK,WAAIX,OAAJ,cAAL,CACNY,IADM,CACD,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADP,EAENF,IAFM,CAED,UAAAP,OAAO;AAAA,aAAIK,QAAQ,CACvBN,UAAU,CAACC,OAAD,CADa,CAAZ;AAAA,KAFN,EAINU,KAJM,CAIA,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAJL,CAAP;AAKD,GAND;AAOD,CATM;AAWP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,cAAc,EAAI;AACrD,SAAO;AACLd,IAAAA,IAAI,EAAE,mBADD;AAELc,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAb,MAAM,EAAI;AACzC,SAAO,UAAAE,QAAQ,EAAI;AACjB,WAAOC,KAAK,WAAIX,OAAJ,eAAuB;AACjCsB,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwB;AAKjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAElB,QAAAA,MAAM,EAAEA;AAAV,OAAf;AAL2B,KAAvB,CAAL,CAOJI,IAPI,CAOC,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KAPT,EAQJF,IARI,CAQC,UAAAJ,MAAM,EAAI;AACdE,MAAAA,QAAQ,CAACH,SAAS,CAACC,MAAD,CAAV,CAAR;AACD,KAVI,EAWJO,KAXI,CAWE,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KAXP,CAAP;AAaD,GAdD;AAeD,CAhBM","sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\nconst setRecipes = recipes => {\n  return {\n    type: \"LOADED_USER_RECIPES\",\n    recipes\n  }\n}\n\nconst addRecipe = recipe => {\n  return {\n    type: \"CREATE_DB_RECIPE\",\n    recipe\n  }\n}\n\nexport const getMyRecipes = () => {\n  // debugger\n  return dispatch => {\n    return fetch(`${API_URL}/recipes`)\n    .then(response => response.json())\n    .then(recipes => dispatch(\n      setRecipes(recipes)))\n    .catch(error => console.log(error))\n  }\n}\n\nexport const receiveRecipeFormData = recipeFormData => {\n  return {\n    type: \"RECEIVE_FORM_DATA\",\n    recipeFormData\n  }\n}\n\nexport const createNewDBRecipe = recipe => {\n  return dispatch => {\n    return fetch(`${API_URL}/recipes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ recipe: recipe })\n    })\n      .then(response => response.json())\n      .then(recipe => {\n        dispatch(addRecipe(recipe))\n      })\n      .catch(error => console.log(error))\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}