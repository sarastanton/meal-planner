{"ast":null,"code":"import _toConsumableArray from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeForm).call(this));\n\n    _this.createIngredientsArray = function () {\n      var ingredientsArray = [];\n\n      for (var i = 0; i < _this.ingredientFormArray.length; i++) {\n        var element = \"ingredient-\".concat(_this.ingredientFormArray[i]);\n        var newIng = {\n          quantity: document.getElementsByClassName(\"\".concat(element, \" quantity\")).quantity.value,\n          unit: document.getElementsByClassName(\"\".concat(element, \" unit\")).unit.value,\n          description: document.getElementsByClassName(\"\".concat(element, \" description\")).description.value\n        };\n        ingredientsArray.push(newIng);\n      }\n\n      return ingredientsArray;\n    };\n\n    _this.handleOnClick = function (event) {\n      event.preventDefault();\n      ++_this.ingredientCounter;\n\n      _this.ingredientFormArray.push(_this.ingredientCounter);\n\n      _this.forceUpdate();\n    };\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        ingredients_attributes: [].concat(_toConsumableArray(ingredients_attributes), [_this.createIngredientObjects()])\n      });\n\n      console.log(_this.state); // this.props.createNewDBRecipe(this.state)\n      // document.getElementsByClassName(\"ingredient-1\").quantity.value\n    };\n\n    _this.handleOnChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState(function (state) {\n        return {\n          name: value\n        };\n      });\n    };\n\n    _this.ingredientCounter = 1;\n    _this.ingredientFormArray = [1];\n    _this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // debugger\n      return React.createElement(\"div\", {\n        className: \"card card-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"recipe-form\",\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Recipe Name: \")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Directions:\"), \" \"), React.createElement(\"textarea\", {\n        name: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), this.ingredientFormArray.map(function (i) {\n        return React.createElement(IngredientForm, {\n          count: i,\n          createRecipeObj: _this2.createRecipeObj,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Add another ingredient:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nexport default connect(null, {\n  createNewDBRecipe: createNewDBRecipe\n})(RecipeForm);","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","IngredientForm","connect","createNewDBRecipe","RecipeForm","createIngredientsArray","ingredientsArray","i","ingredientFormArray","length","element","newIng","quantity","document","getElementsByClassName","value","unit","description","push","handleOnClick","event","preventDefault","ingredientCounter","forceUpdate","handleOnSubmit","setState","ingredients_attributes","createIngredientObjects","console","log","state","handleOnChange","name","target","directions","map","createRecipeObj"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nclass RecipeForm extends Component {\n\n  constructor() {\n    super()\n    this.ingredientCounter = 1;\n    this.ingredientFormArray = [1];\n    this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    };\n  }\n\n  createIngredientsArray = () => {\n    let ingredientsArray = [];\n\n    for (let i = 0; i < this.ingredientFormArray.length; i++) {\n      let element = `ingredient-${this.ingredientFormArray[i]}`;\n      let newIng = {\n        quantity: document.getElementsByClassName(`${element} quantity`).quantity.value,\n        unit: document.getElementsByClassName(`${element} unit`).unit.value,\n        description: document.getElementsByClassName(`${element} description`).description.value\n      };\n        ingredientsArray.push(newIng)\n    }\n\n    return ingredientsArray\n  }\n\n  handleOnClick = event => {\n    event.preventDefault();\n    ++this.ingredientCounter;\n    this.ingredientFormArray.push(this.ingredientCounter);\n    this.forceUpdate()\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      ingredients_attributes: [ ...ingredients_attributes, (this.createIngredientObjects()) ]\n    });\n    console.log(this.state)\n  // this.props.createNewDBRecipe(this.state)\n  // document.getElementsByClassName(\"ingredient-1\").quantity.value\n  }\n\n  handleOnChange = event => {\n    let name = event.target.name;\n    let value = event.target.value;\n    this.setState((state) => {\n      return {name: value}\n    })\n  }\n\n  render() {\n    // debugger\n    return (\n      <div className=\"card card-holder\">\n        <form id=\"recipe-form\" onSubmit={this.handleOnSubmit}>\n          <p>\n            <label htmlFor=\"name\"><strong>Recipe Name: </strong></label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleOnChange}/>\n          </p>\n          <p>\n            <label htmlFor=\"directions\"><strong>Directions:</strong> </label>\n            <textarea name=\"directions\"/>\n          </p>\n          <br/>\n          {this.ingredientFormArray.map(i => <IngredientForm count={i} createRecipeObj={this.createRecipeObj}/>)}\n          <br />\n          <button onClick={this.handleOnClick}>Add another ingredient:</button>\n          <br />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default connect(null, { createNewDBRecipe })(RecipeForm)\n"]},"metadata":{},"sourceType":"module"}