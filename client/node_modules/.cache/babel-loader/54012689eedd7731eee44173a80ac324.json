{"ast":null,"code":"import _defineProperty from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { receiveRecipeFormData } from '../../actions/myRecipes';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecipeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createNewDBRecipe(_this.props.recipeFormData);\n    };\n\n    _this.handleOnChange = function (event) {\n      // debugger\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      var currentRecipeFormData = _objectSpread({}, _this.props.recipeFormData, _defineProperty({}, name, value));\n\n      _this.props.receiveRecipeFormData(currentRecipeFormData); // debugger\n\n    };\n\n    _this.handleOnClick = function (event) {\n      console.log(\"button clicked\");\n    };\n\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      // debugger\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"This is the RecipeForm Component.\", React.createElement(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Recipe Name: \")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.props.recipeFormData.name,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(IngredientForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add another ingredient:\"), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recipeFormData: state.recipes.recipeFormData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createNewDBRecipe: createNewDBRecipe,\n  receiveRecipeFormData: receiveRecipeFormData\n})(RecipeForm); // <form onSubmit={this.handleOnSubmit}>\n//   <p>\n//     <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n//     <input type=\"text\" name=\"quantity\" value={quantity} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n//     <input type=\"text\" name=\"unit\" value={unit} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"description\">Description: </label>\n//     <input type=\"text\" name=\"description\" value={description} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"directions\">Directions: </label>\n//     <textarea name=\"directions\" value={directions} onChange={this.handleOnChange}/>\n//   </p>\n//   <input type=\"submit\" />\n// </form>","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","IngredientForm","connect","receiveRecipeFormData","createNewDBRecipe","RecipeForm","handleOnSubmit","event","preventDefault","props","recipeFormData","handleOnChange","target","name","value","currentRecipeFormData","handleOnClick","console","log","mapStateToProps","state","recipes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,iBAAT,QAAkC,yBAAlC;;IAEMC,U;;;;;;;;;;;;;;;;;;UAEJC,c,GAAiB,UAAAC,KAAK,EAAI;AACxBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKC,KAAL,CAAWL,iBAAX,CAA6B,MAAKK,KAAL,CAAWC,cAAxC;AACD,K;;UAEDC,c,GAAiB,UAAAJ,KAAK,EAAI;AACxB;AADwB,0BAEAA,KAAK,CAACK,MAFN;AAAA,UAEhBC,IAFgB,iBAEhBA,IAFgB;AAAA,UAEVC,KAFU,iBAEVA,KAFU;;AAGxB,UAAMC,qBAAqB,qBAAO,MAAKN,KAAL,CAAWC,cAAlB,sBAAmCG,IAAnC,EAA0CC,KAA1C,EAA3B;;AACA,YAAKL,KAAL,CAAWN,qBAAX,CAAiCY,qBAAjC,EAJwB,CAKxB;;AACD,K;;UAEDC,a,GAAgB,UAAAT,KAAK,EAAI;AACvBU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,K;;;;;;;6BAEQ;AACP;AACA,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEA;AAAM,QAAA,QAAQ,EAAE,KAAKZ,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAtB,CADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,cAAX,CAA0BG,IAAhE;AAAsE,QAAA,QAAQ,EAAE,KAAKF,cAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EASE;AAAQ,QAAA,OAAO,EAAE,KAAKK,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCATF,EAUE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CAFA,CADF;AAmBD;;;;EAxCsBhB,S;;AA4CzB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLV,IAAAA,cAAc,EAAEU,KAAK,CAACC,OAAN,CAAcX;AADzB,GAAP;AAGD,CAJD;;AAMA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA,iBAAiB,EAAjBA,iBAAF;AAAqBD,EAAAA,qBAAqB,EAArBA;AAArB,CAAlB,CAAP,CAAuEE,UAAvE,CAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { receiveRecipeFormData } from '../../actions/myRecipes'\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nclass RecipeForm extends Component {\n\n  handleOnSubmit = event => {\n    event.preventDefault()\n    this.props.createNewDBRecipe(this.props.recipeFormData)\n  }\n\n  handleOnChange = event => {\n    // debugger\n    const { name, value } = event.target;\n    const currentRecipeFormData = {...this.props.recipeFormData, [name]: value};\n    this.props.receiveRecipeFormData(currentRecipeFormData)\n    // debugger\n  }\n\n  handleOnClick = event => {\n    console.log(\"button clicked\")\n  }\n\n  render() {\n    // debugger\n    return (\n      <div className=\"card\">\n      This is the RecipeForm Component.\n      <form onSubmit={this.handleOnSubmit}>\n        <div className=\"form-container\">\n          <p>\n            <label htmlFor=\"name\"><strong>Recipe Name: </strong></label>\n            <input type=\"text\" name=\"name\" value={this.props.recipeFormData.name} onChange={this.handleOnChange}/>\n          </p>\n          <br/>\n          <IngredientForm />\n        </div>\n        <button onClick={this.handleOnClick}>Add another ingredient:</button>\n        <input type=\"submit\" />\n        <br />\n      </form>\n\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipeFormData: state.recipes.recipeFormData\n  }\n}\n\nexport default connect(mapStateToProps, { createNewDBRecipe, receiveRecipeFormData })(RecipeForm)\n\n\n// <form onSubmit={this.handleOnSubmit}>\n//   <p>\n//     <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n//     <input type=\"text\" name=\"quantity\" value={quantity} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n//     <input type=\"text\" name=\"unit\" value={unit} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"description\">Description: </label>\n//     <input type=\"text\" name=\"description\" value={description} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"directions\">Directions: </label>\n//     <textarea name=\"directions\" value={directions} onChange={this.handleOnChange}/>\n//   </p>\n//   <input type=\"submit\" />\n// </form>\n"]},"metadata":{},"sourceType":"module"}