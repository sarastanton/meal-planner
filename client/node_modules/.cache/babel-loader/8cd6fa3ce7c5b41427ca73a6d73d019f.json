{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/ingredientForm.js\";\n\nimport React from 'react';\n\nvar IngredientForm = function IngredientForm(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Ingredient 1:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Quantity (should be a number): \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"quantity\",\n    value: _this.props.recipeFormData.quantity,\n    onChange: _this.handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"unit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Unit (i.e. teaspoon, cup, dash...): \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"unit\",\n    value: _this.props.recipeFormData.unit,\n    onChange: _this.handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Description: \"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"description\",\n    value: _this.props.recipeFormData.description,\n    onChange: _this.handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"directions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Directions: \"), React.createElement(\"textarea\", {\n    name: \"directions\",\n    value: _this.props.recipeFormData.directions,\n    onChange: _this.handleOnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nexport default IngredientForm;","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/ingredientForm.js"],"names":["React","IngredientForm","props","recipeFormData","quantity","handleOnChange","unit","description","directions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,KAAK,EAAE,KAAI,CAACA,KAAL,CAAWC,cAAX,CAA0BC,QAApE;AAA8E,IAAA,QAAQ,EAAE,KAAI,CAACC,cAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAE,KAAI,CAACH,KAAL,CAAWC,cAAX,CAA0BG,IAAhE;AAAsE,IAAA,QAAQ,EAAE,KAAI,CAACD,cAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,aAAxB;AAAsC,IAAA,KAAK,EAAE,KAAI,CAACH,KAAL,CAAWC,cAAX,CAA0BI,WAAvE;AAAoF,IAAA,QAAQ,EAAE,KAAI,CAACF,cAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAU,IAAA,IAAI,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE,KAAI,CAACH,KAAL,CAAWC,cAAX,CAA0BK,UAA7D;AAAyE,IAAA,QAAQ,EAAE,KAAI,CAACH,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAdF,CADF;AAqBD,CAtBD;;AAwBA,eAAeJ,cAAf","sourcesContent":["import React from 'react'\n\nconst IngredientForm = props => {\n  return (\n    <div className=\"card\">\n      <strong>Ingredient 1:</strong>\n      <p>\n        <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n        <input type=\"text\" name=\"quantity\" value={this.props.recipeFormData.quantity} onChange={this.handleOnChange}/>\n      </p>\n      <p>\n        <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n        <input type=\"text\" name=\"unit\" value={this.props.recipeFormData.unit} onChange={this.handleOnChange}/>\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description: </label>\n        <input type=\"text\" name=\"description\" value={this.props.recipeFormData.description} onChange={this.handleOnChange}/>\n      </p>\n      <p>\n        <label htmlFor=\"directions\">Directions: </label>\n        <textarea name=\"directions\" value={this.props.recipeFormData.directions} onChange={this.handleOnChange}/>\n      </p>\n    </div>\n  )\n}\n\nexport default IngredientForm\n"]},"metadata":{},"sourceType":"module"}