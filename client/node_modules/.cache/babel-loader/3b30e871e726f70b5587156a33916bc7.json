{"ast":null,"code":"import _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\nvar ingredientCounter = 1;\nvar ingredientFormArray = [1];\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeForm).call(this));\n\n    _this.createIngredientObjects = function () {\n      var arrayOfIngredients = [];\n      var allInputs = document.getElementsByTagName(\"input\");\n\n      for (var i = 0; i < allInputs.length; i++) {\n        if (allInputs[i].classList.contains(\"ingredient-\".concat(i))) {\n          var newIng = {\n            quantity: document.getElementsByClassName(\"ingredient-\".concat(i + 1)).quantity.value,\n            unit: document.getElementsByClassName(\"ingredient-\".concat(i + 1)).unit.value,\n            description: document.getElementsByClassName(\"ingredient-\".concat(i + 1)).description.value\n          };\n          arrayOfIngredients.push(newIng);\n        }\n\n        ;\n        return arrayOfIngredients;\n        console.log(arrayOfIngredients);\n      }\n    };\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n      createIngredientObjects();\n      debugger; // let ingredientsArray = [];\n      // let recipeObject = {\n      //   name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n      // }\n      // this.props.createNewDBRecipe(this.props.recipeFormData)\n      // recipeFormData needs to be in this format: {\n      //   name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n      //    ]\n      // }\n      // document.getElementsByClassName(\"ingredient-1\").quantity.value\n    };\n\n    _this.handleOnClick = function (event) {\n      event.preventDefault();\n      ++ingredientCounter;\n      ingredientFormArray.push(ingredientCounter);\n\n      _this.forceUpdate();\n    };\n\n    _this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // debugger\n      return React.createElement(\"div\", {\n        className: \"card card-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"recipe-form\",\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Recipe Name: \")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Directions:\"), \" \"), React.createElement(\"textarea\", {\n        name: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), ingredientFormArray.map(function (i) {\n        return React.createElement(IngredientForm, {\n          count: i,\n          createRecipeObj: _this2.createRecipeObj,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Add another ingredient:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nexport default connect(null, {\n  createNewDBRecipe: createNewDBRecipe\n})(RecipeForm);","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","IngredientForm","connect","createNewDBRecipe","ingredientCounter","ingredientFormArray","RecipeForm","createIngredientObjects","arrayOfIngredients","allInputs","document","getElementsByTagName","i","length","classList","contains","newIng","quantity","getElementsByClassName","value","unit","description","push","console","log","handleOnSubmit","event","preventDefault","handleOnClick","forceUpdate","state","name","directions","ingredients_attributes","handleOnChange","map","createRecipeObj"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nlet ingredientCounter = 1;\nlet ingredientFormArray = [1];\n\nclass RecipeForm extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    }\n  }\n\n  createIngredientObjects = () => {\n    let arrayOfIngredients = [];\n    let allInputs = document.getElementsByTagName(\"input\");\n    for (let i = 0; i < allInputs.length; i++) {\n      if (allInputs[i].classList.contains(`ingredient-${i}`)) {\n        let newIng = {\n          quantity: document.getElementsByClassName(`ingredient-${i+1}`).quantity.value,\n          unit: document.getElementsByClassName(`ingredient-${i+1}`).unit.value,\n          description: document.getElementsByClassName(`ingredient-${i+1}`).description.value\n        };\n        arrayOfIngredients.push(newIng)};\n        return arrayOfIngredients\n        console.log(arrayOfIngredients)\n    }\n  }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    createIngredientObjects()\n    debugger\n    // let ingredientsArray = [];\n    // let recipeObject = {\n    //   name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n    // }\n    // this.props.createNewDBRecipe(this.props.recipeFormData)\n  // recipeFormData needs to be in this format: {\n  //   name: '',\n  //   directions: ''.\n  //   ingredients_attributes: [\n  //      quantity: '',\n  //      unit: '',\n  //      description: '',\n  //    ]\n  // }\n  // document.getElementsByClassName(\"ingredient-1\").quantity.value\n}\n\n  handleOnClick = event => {\n    event.preventDefault();\n    ++ingredientCounter;\n    ingredientFormArray.push(ingredientCounter);\n    this.forceUpdate()\n  }\n\n  render() {\n    // debugger\n    return (\n      <div className=\"card card-holder\">\n        <form id=\"recipe-form\" onSubmit={this.handleOnSubmit}>\n          <p>\n            <label htmlFor=\"name\"><strong>Recipe Name: </strong></label>\n            <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleOnChange}/>\n          </p>\n          <p>\n            <label htmlFor=\"directions\"><strong>Directions:</strong> </label>\n            <textarea name=\"directions\"/>\n          </p>\n          <br/>\n          {ingredientFormArray.map(i => <IngredientForm count={i} createRecipeObj={this.createRecipeObj}/>)}\n          <br />\n          <button onClick={this.handleOnClick}>Add another ingredient:</button>\n          <br />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default connect(null, { createNewDBRecipe })(RecipeForm)\n"]},"metadata":{},"sourceType":"module"}