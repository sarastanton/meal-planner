{"ast":null,"code":"import _defineProperty from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { receiveRecipeFormData } from '../../actions/myRecipes';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\nvar initialState = {\n  quantity: '',\n  unit: '',\n  description: '',\n  directions: ''\n};\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RecipeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createNewDBRecipe(_this.props.recipeFormData);\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      var currentRecipeFormData = _objectSpread({}, _this.props.recipeFormData, _defineProperty({}, name, value));\n\n      _this.props.receiveRecipeFormData(currentRecipeFormData);\n\n      debugger;\n    };\n\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      // debugger\n      // const { quantity, unit, description, directions } = this.props.recipeFormData;\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Quantity (should be a number): \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"quantity\",\n        value: quantity,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"unit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Unit (i.e. teaspoon, cup, dash...): \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"unit\",\n        value: unit,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Description: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Directions: \"), React.createElement(\"textarea\", {\n        name: \"directions\",\n        value: directions,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recipeFormData: state.recipeFormData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createNewDBRecipe: createNewDBRecipe,\n  receiveRecipeFormData: receiveRecipeFormData\n})(RecipeForm);","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","connect","receiveRecipeFormData","createNewDBRecipe","initialState","quantity","unit","description","directions","RecipeForm","handleSubmit","event","preventDefault","props","recipeFormData","handleChange","target","name","value","currentRecipeFormData","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { receiveRecipeFormData } from '../../actions/myRecipes'\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nconst initialState = {\n  quantity: '',\n  unit: '',\n  description: '',\n  directions: ''\n}\n\nclass RecipeForm extends Component {\n\n  handleSubmit = event => {\n    event.preventDefault()\n    this.props.createNewDBRecipe(this.props.recipeFormData)\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    const currentRecipeFormData = {... this.props.recipeFormData, [name]: value};\n    this.props.receiveRecipeFormData(currentRecipeFormData)\n    debugger\n  }\n\n  render() {\n    // debugger\n    // const { quantity, unit, description, directions } = this.props.recipeFormData;\n\n    return (\n      <div className=\"card\">\n      <form onSubmit={this.handleSubmit}>\n        <p>\n          <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n          <input type=\"text\" name=\"quantity\" value={quantity} onChange={this.handleChange}/>\n        </p>\n        <p>\n          <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n          <input type=\"text\" name=\"unit\" value={unit} onChange={this.handleChange}/>\n        </p>\n        <p>\n          <label htmlFor=\"description\">Description: </label>\n          <input type=\"text\" name=\"description\" value={description} onChange={this.handleChange}/>\n        </p>\n        <p>\n          <label htmlFor=\"directions\">Directions: </label>\n          <textarea name=\"directions\" value={directions} onChange={this.handleChange}/>\n        </p>\n        <input type=\"submit\" />\n      </form>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipeFormData: state.recipeFormData\n  }\n}\n\nexport default connect(mapStateToProps, { createNewDBRecipe, receiveRecipeFormData })(RecipeForm)\n"]},"metadata":{},"sourceType":"module"}