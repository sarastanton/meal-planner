{"ast":null,"code":"import _classCallCheck from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js\";\nimport React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes';\nvar ingredientCounter = 1;\nvar ingredientFormArray = [1];\n\nvar RecipeForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RecipeForm, _Component);\n\n  function RecipeForm() {\n    var _this;\n\n    _classCallCheck(this, RecipeForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RecipeForm).call(this));\n\n    _this.createRecipeObj = function (event) {\n      // debugger\n      console.log(\"{\".concat(event.target.name, \": \").concat(event.target.value, \"}\"));\n    };\n\n    _this.handleOnSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.createNewDBRecipe(_this.props.recipeFormData); // recipeFormData needs to be in this format: {\n      //   name: '',\n      //   directions: ''.\n      //   ingredients_attributes: [\n      //      quantity: '',\n      //      unit: '',\n      //      description: '',\n      //    ]\n      // }\n\n    };\n\n    _this.handleOnClick = function (event) {\n      event.preventDefault();\n      console.log(\"button clicked\");\n      ++ingredientCounter;\n      ingredientFormArray.push(ingredientCounter);\n\n      _this.forceUpdate();\n    };\n\n    _this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    };\n    return _this;\n  }\n\n  _createClass(RecipeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // debugger\n      return React.createElement(\"div\", {\n        className: \"card card-holder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Recipe Name: \")), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.props.recipeFormData.name,\n        onChange: this.handleOnChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Directions:\"), \" \"), React.createElement(\"textarea\", {\n        name: \"directions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), ingredientFormArray.map(function (i) {\n        return React.createElement(IngredientForm, {\n          count: i,\n          createRecipeObj: _this2.createRecipeObj,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Add another ingredient:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return RecipeForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    recipeFormData: state.recipes.recipeFormData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createNewDBRecipe: createNewDBRecipe\n})(RecipeForm); // <form onSubmit={this.handleOnSubmit}>\n//   <p>\n//     <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n//     <input type=\"text\" name=\"quantity\" value={quantity} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n//     <input type=\"text\" name=\"unit\" value={unit} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"description\">Description: </label>\n//     <input type=\"text\" name=\"description\" value={description} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"directions\">Directions: </label>\n//     <textarea name=\"directions\" value={directions} onChange={this.handleOnChange}/>\n//   </p>\n//   <input type=\"submit\" />\n// </form>","map":{"version":3,"sources":["/Users/sara/Documents/Documents/Coding/Projects/Meal-Planner/front-end/meal-planner-front-end/src/components/recipes/recipeForm.js"],"names":["React","Component","IngredientForm","connect","createNewDBRecipe","ingredientCounter","ingredientFormArray","RecipeForm","createRecipeObj","event","console","log","target","name","value","handleOnSubmit","preventDefault","props","recipeFormData","handleOnClick","push","forceUpdate","state","directions","ingredients_attributes","handleOnChange","map","i","mapStateToProps","recipes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IngredientForm from './ingredientForm';\nimport { connect } from 'react-redux';\nimport { createNewDBRecipe } from '../../actions/myRecipes'\n\nlet ingredientCounter = 1;\nlet ingredientFormArray = [1];\n\nclass RecipeForm extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      directions: '',\n      ingredients_attributes: []\n    }\n  }\n\n  createRecipeObj = (event) => {\n    // debugger\n    console.log(\n      `{${event.target.name}: ${event.target.value}}`)\n  }\n\n  // componentDidUpdate = (event) => {\n  //   let newRecipeObj = {\n  //     quantity: event.target.quantity,\n  //     unit: event.target.unit,\n  //     description: event.target.description\n  //   };\n  //   this.setState({\n  //     ingredients_attributes: [...this.state.ingredients_attributes, newRecipeObj] })\n  // }\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    this.props.createNewDBRecipe(this.props.recipeFormData)\n  // recipeFormData needs to be in this format: {\n  //   name: '',\n  //   directions: ''.\n  //   ingredients_attributes: [\n  //      quantity: '',\n  //      unit: '',\n  //      description: '',\n  //    ]\n  // }\n}\n\n  handleOnClick = event => {\n    event.preventDefault();\n    console.log(\"button clicked\");\n    ++ingredientCounter;\n    ingredientFormArray.push(ingredientCounter);\n    this.forceUpdate()\n  }\n\n  render() {\n    // debugger\n    return (\n      <div className=\"card card-holder\">\n        <form onSubmit={this.handleOnSubmit}>\n          <p>\n            <label htmlFor=\"name\"><strong>Recipe Name: </strong></label>\n            <input type=\"text\" name=\"name\" value={this.props.recipeFormData.name} onChange={this.handleOnChange}/>\n          </p>\n          <p>\n            <label htmlFor=\"directions\"><strong>Directions:</strong> </label>\n            <textarea name=\"directions\"/>\n          </p>\n          <br/>\n          {ingredientFormArray.map(i => <IngredientForm count={i} createRecipeObj={this.createRecipeObj}/>)}\n          <br />\n          <button onClick={this.handleOnClick}>Add another ingredient:</button>\n          <br />\n          <input type=\"submit\" />\n        </form>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    recipeFormData: state.recipes.recipeFormData\n  }\n}\n\nexport default connect(mapStateToProps, { createNewDBRecipe })(RecipeForm)\n\n\n// <form onSubmit={this.handleOnSubmit}>\n//   <p>\n//     <label htmlFor=\"quantity\">Quantity (should be a number): </label>\n//     <input type=\"text\" name=\"quantity\" value={quantity} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"unit\">Unit (i.e. teaspoon, cup, dash...): </label>\n//     <input type=\"text\" name=\"unit\" value={unit} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"description\">Description: </label>\n//     <input type=\"text\" name=\"description\" value={description} onChange={this.handleOnChange}/>\n//   </p>\n//   <p>\n//     <label htmlFor=\"directions\">Directions: </label>\n//     <textarea name=\"directions\" value={directions} onChange={this.handleOnChange}/>\n//   </p>\n//   <input type=\"submit\" />\n// </form>\n"]},"metadata":{},"sourceType":"module"}